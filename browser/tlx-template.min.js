(function(){"use strict";const tlx=this.tlx||(this.tlx={});tlx.options||(tlx.options={});tlx.options.templates=true;if(!tlx.options.components)console.warn("tlx-component.js mut be loaded to use tlx-template");tlx.compile=function(template){const tagname=template.getAttribute("t-tagname");if(!tagname)return;const clone=document.createElement(tagname);clone.innerHTML=template.innerHTML;const styles=clone.querySelectorAll("style")||[],scripts=clone.querySelectorAll("script")||[];for(let style of[].slice.call(styles)){let spec=style.innerText,matches=spec.match(/.*\{.+\}/g),text=matches?matches.reduce((accum,item)=>accum+=`${tagname} ${item.trim()} `,""):"";spec=matches?matches.reduce((accum,item)=>accum=accum.replace(item,""),spec):spec;matches=spec.match(/.*;/g),text=matches?matches.reduce((accum,item)=>accum+=`${tagname} * {${item.trim()}} `,text):text;style.innerText=text.trim();document.head.appendChild(style)}const scope=[].slice.call(template.attributes).reduce((accum,attribute)=>{["id","t-tagname"].includes(attribute.name)||(accum[attribute.name]=attribute.value);return accum},{});for(let script of[].slice.call(scripts)){const newscope=Function(`with(this) { ${script.innerText}; }`).call(scope);!newscope||(scope=newscope);clone.removeChild(script)}const templatehtml=clone.innerHTML.replace(/&gt;/g,">").replace(/&lt;/g,"<");scope.render=function(){return this.html(templatehtml,Object.assign({},scope,this.attributes))};const component=Function("defaults",`return function(attributes={},el=document.createElement("${tagname}")) {\n\t\t\t\t\tObject.assign(el,tlx.Mixin);\n\t\t\t\t\tel.initialize(Object.assign({},defaults,attributes));\n\t\t\t\t\treturn el;\n\t\t\t\t\t}`)(scope);this.define(tagname,component)}}).call(this);